# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'


- task: DotNetCoreCLI@2
  displayName: 'DotNet Restore NuGet packages'
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: 'LeaderAnalytics.Core/CoreArtifacts'
    includeNuGetOrg: true
     

- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.ArtifactStagingDirectory)\\"    /p:UseWPP_CopyWebApplication=true  /p:OutDir="$(build.ArtifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: install
    workingDir: $(build.ArtifactStagingDirectory)/LeaderAnalytics.Web/ClientApp


- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'


#- task: DotNetCoreCLI@2
#  inputs: 'DotNet publish'
#    command: publish
#    publishWebProjects: True
#    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#    zipAfterPublish: True
 
#- task: AzureRmWebAppDeployment@4
#  inputs:
#    ConnectionType: 'AzureRM'
#    azureSubscription: 'All Azure Services'
#    appType: 'webApp'
#    WebAppName: 'LeaderAnalyticsWeb'
#    UseWebDeploy: true
#    packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'

